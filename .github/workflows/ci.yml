name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install ruff flake8 pytest pytest-cov pytest-mock bandit safety
    
    - name: Run Ruff linter
      run: |
        echo "::group::Ruff Check"
        ruff check . --output-format=github
        echo "::endgroup::"
    
    - name: Run Ruff formatter check
      run: |
        echo "::group::Ruff Format Check"
        ruff format --check .
        echo "::endgroup::"
    
    - name: Run Flake8
      run: |
        echo "::group::Flake8"
        flake8 backend/ cli/ dashboard/ tests/ --max-line-length=88 --extend-ignore=E203,W503
        echo "::endgroup::"

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock pytest-asyncio httpx
    
    - name: Run pytest
      run: |
        pytest -v --cov=backend --cov=cli --cov=dashboard \
               --cov-report=xml --cov-report=term-missing \
               --cov-fail-under=80
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml] safety
    
    - name: Run Bandit security scanner
      run: |
        bandit -r backend/ cli/ dashboard/ -c .bandit -f json -o bandit-report.json || true
        bandit -r backend/ cli/ dashboard/ -c .bandit
    
    - name: Run Safety to check dependencies
      run: |
        safety check --json --output safety-report.json || true
        safety check